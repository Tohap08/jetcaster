    buildscript {
        repositories {
            flatDir dirs: '../appsuit'
        }
        dependencies {
            classpath 'com.stealien.appsuit.gradle:AppSuit-AndroidStudio-24.1.2'
        }
    }

    plugins {
        id 'com.android.application'
        id 'kotlin-android'
        id 'kotlin-kapt'
    }

    import com.example.jetcaster.buildsrc.Libs

    kapt {
        correctErrorTypes = true
        useBuildCache = true
    }

    android {
        compileSdkVersion 31

        defaultConfig {
            applicationId 'com.example.jetcaster'

//            default minSdkVersion
//            minSdkVersion 21
            minSdkVersion 30

//            default targetSdkVersion
//            targetSdkVersion 31
            targetSdkVersion 34

            versionCode 1
            versionName '1.0'
            testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'

            javaCompileOptions {
                annotationProcessorOptions {
                    arguments = [
                            "room.incremental"     : "true",
                            "room.expandProjection": "true"
                    ]
                }
            }
        }

        packagingOptions {
            // The Rome library JARs embed some internal utils libraries in nested JARs.
            // We don't need them so we exclude them in the final package.
            exclude "/*.jar"
        }

        s {
            // We use a bundled debug keystore, to allow debug builds from CI to be upgradable
            debug {
                storeFile rootProject.file('debug.keystore')
                storePassword 'android'
                keyAlias 'androiddebugkey'
                keyPassword 'android'
            }
        }

        buildTypes {
            debug {
                signingConfig signingConfigs.debug
            }

            release {
                minifyEnabled true
                proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            }
        }

        compileOptions {
            // Flag to enable support for the new language APIs
//            coreLibraryDesugaringEnabled true

            sourceCompatibility JavaVersion.VERSION_1_8
            targetCompatibility JavaVersion.VERSION_1_8
        }

        buildFeatures {
            compose true
        }

        composeOptions {
            kotlinCompilerExtensionVersion Libs.AndroidX.Compose.version
        }
    }

    dependencies {
        implementation Libs.Kotlin.stdlib
        implementation Libs.Coroutines.android

        implementation Libs.AndroidX.coreKtx
        implementation Libs.AndroidX.palette

        implementation Libs.AndroidX.Activity.activityCompose

        implementation Libs.AndroidX.Constraint.constraintLayoutCompose

        implementation Libs.AndroidX.Compose.foundation
        implementation Libs.AndroidX.Compose.material
        implementation Libs.AndroidX.Compose.materialIconsExtended
        implementation Libs.AndroidX.Compose.toolingPreview
        debugImplementation Libs.AndroidX.Compose.tooling

        implementation Libs.AndroidX.Lifecycle.runtime
        implementation Libs.AndroidX.Lifecycle.viewmodel
        implementation Libs.AndroidX.Lifecycle.viewModelCompose
        implementation Libs.AndroidX.Navigation.navigation

        implementation Libs.AndroidX.Window.window

        implementation Libs.Accompanist.pager

        implementation Libs.Coil.coilCompose

        implementation Libs.OkHttp.okhttp
        implementation Libs.OkHttp.logging

        implementation Libs.Rome.rome
        implementation Libs.Rome.modules

        implementation Libs.AndroidX.Room.runtime
        implementation Libs.AndroidX.Room.ktx



        kapt Libs.AndroidX.Room.compiler

        coreLibraryDesugaring Libs.jdkDesugar
    }

    apply plugin: 'appsuit'

    appsuit {
        serverOptions {
            host = 'https://cloud.appsu.it/api/v1'
            id 'stealien_se'
            pw 'stealien'

    //      options = ['check_root', 'detect_magisk', 'check_integrity', 'check_emul', 'check_debugging', 'prevent_debugging', 'self_protect', 'encrypt_so', 'encrypt_flutter', 'prevent_decompile']
            options = ['check_integrity']

            cloudBuild true
            enableServerBuild true
            processLibrary false
        }
        rulePath '../appsuit/rule.pro'
        dumpPath '../appsuit/dump.txt'
        buildTypes {
            release {
                enabled true
            }
            debug {
                enabled false
            }
        }
    }
